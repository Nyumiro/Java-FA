import java.time.LocalDate;
import java.util.Scanner;

public class ToDoPlanner {

    public static void main(String[] args) {

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:
        var planner = new Planner() {
            {
                add(new Task(LocalDate.of(2023, 1, 1),
                        "–ü–æ—Ö–æ–¥ –∫ –≤—Ä–∞—á—É", "–ü—Ä–∏–µ–º —É —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∞"));
                add(new Task(LocalDate.of(2023, 1, 2),
                        "–ü–æ—Ö–æ–¥ –∫ –≤—Ä–∞—á—É", "–ü—Ä–∏–µ–º —É –≥–∏–Ω–µ–∫–æ–ª–æ–≥–∞"));
                add(new Task(LocalDate.of(2023, 2, 3),
                        "–ü–æ—Ö–æ–¥ –∫ –≤—Ä–∞—á—É", "–ü—Ä–∏–µ–º —É –ø—Ä–æ–∫—Ç–æ–ª–æ–≥–∞"));
                add(new Task(LocalDate.of(2023, 2, 4),
                        "–ü–æ—Ö–æ–¥ –∫ –≤—Ä–∞—á—É", "–ü—Ä–∏–µ–º —É –æ–Ω–∫–æ–ª–æ–≥–∞"));
                add(new Task(LocalDate.of(2023, 3, 5),
                        "–ü–æ—Ö–æ–¥ –∫ –≤—Ä–∞—á—É", "–ü—Ä–∏–µ–º —É –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∞"));
                add(new Task(LocalDate.of(2023, 4, 6),
                        "–ü–æ—Ö–æ–¥ –∫ –≤—Ä–∞—á—É", "–ü—Ä–∏–µ–º —É –ø—Å–∏—Ö–∏–∞—Ç—Ä–∞"));
            }
        };

        var scanner = new Scanner(System.in);

        System.out.println("""
                \n
                –í–ê–° –ü–†–ò–í–ï–¢–°–¢–í–£–ï–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –ó–ê–î–ê–ß –° ULTRA ü§° USER-UNFRIENDLY ü§° –ò–ù–¢–ï–†–§–ï–ô–°–û–ú!
               
                –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\s
                 0 -- –ü–û–°–ú–û–¢–†–ï–¢–¨ –î–ï–¢–ê–õ–¨–ù–£–Æ –ò–ù–§–û–†–ú–ê–¶–ò–Æ –û –ó–ê–î–ê–ù–ò–ò.
                 1 -- –°–û–ó–î–ê–¢–¨ –ó–ê–î–ê–ù–ò–ï.
                 2 -- –£–î–ê–õ–ò–¢–¨ –ó–ê–î–ê–ù–ò–ï.\s
                 3 -- –ò–ó–ú–ï–ù–ò–¢–¨ –ó–ê–î–ê–ù–ò–ï.\s
                 + -- –ü–û–ú–ï–¢–ò–¢–¨ –ó–ê–î–ê–ù–ò–ï –í–´–ü–û–õ–ù–ï–ù–ù–´–ú.\s
                 4 -- –ü–û–ö–ê–ó–ê–¢–¨ –í–°–ï –ó–ê–î–ê–ù–ò–Ø.\s
                 5 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –í–°–ï –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ó–ê–î–ê–ù–ò–Ø.
                 6 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –í–°–ï –ù–ï–í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ó–ê–î–ê–ù–ò–Ø.
                 7 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –í–°–ï –ó–ê–î–ê–ù–ò–Ø (–ü–û –î–ê–¢–ï –°–û–ó–î–ê–ù–ò–Ø)
                 8 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –í–°–ï –ó–ê–î–ê–ù–ò–Ø (–ü–û –î–ê–¢–ï –í–´–ü–û–õ–ù–ï–ù–ò–Ø)
                 9 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ó–ê–î–ê–ù–ò–Ø (–ü–û –î–ê–¢–ï –°–û–ó–î–ê–ù–ò–Ø).
                10 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ó–ê–î–ê–ù–ò–Ø (–ü–û –î–ê–¢–ï –í–´–ü–û–õ–ù–ï–ù–ò–Ø).
                11 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –ù–ï–í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ó–ê–î–ê–ù–ò–Ø (–ü–û –î–ê–¢–ï –°–û–ó–î–ê–ù–ò–Ø).
                12 -- –û–¢–û–ë–†–ê–ó–ò–¢–¨ –ù–ï–í–´–ü–û–õ–ù–ï–ù–ù–´–ï –ó–ê–î–ê–ù–ò–Ø (–ü–û –î–ê–¢–ï –°–û–ó–î–ê–ù–ò–Ø).
                """);

        while (true) {
            System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ");
            var command = scanner.nextLine();
            switch (command) {
                case "0" -> System.out.println(planner.getTask(ConsoleHelper.show(scanner, planner)).toString());
                case "1" -> planner.add(ConsoleHelper.create(scanner));
                case "2" -> planner.delete(ConsoleHelper.delete(scanner, planner));
                case "+" -> planner.getTask(ConsoleHelper.mark(scanner, planner)).setCompleted();
                case "3" -> ConsoleHelper.edit(scanner, planner);
                case "4" -> ConsoleHelper.showAll(planner);
                case "5" -> ConsoleHelper.showCompleted(planner);
                case "6" -> ConsoleHelper.showUncompleted(planner);
                case "7" -> ConsoleHelper.show_ALL_byCreationDate(planner, scanner);
                case "8" -> ConsoleHelper.show_ALL_byCompletionDate(planner, scanner);
                case "9" -> ConsoleHelper.show_COMPLETED_byCreationDate(planner, scanner);
                case "10" -> ConsoleHelper.show_COMPLETED_byCompletionDate(planner, scanner);
                case "11" -> ConsoleHelper.show_UNCOMPLETED_byCreationDate(planner, scanner);
                case "12" -> ConsoleHelper.show_UNCOMPLETED_byCompletionDate(planner, scanner);
                default -> System.out.println("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.");
            }
        }
    }
}

